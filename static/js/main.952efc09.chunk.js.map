{"version":3,"sources":["Header.js","Methods.js","TextBox.js","Display.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Methods","prop","onClick","onMethod","id","Object","defineProperty","type","TextBox","_React$createElement","Fragment","name","onChange","handler","placehoder","handleauth","basicauth","placeholder","authhandle","bearertoken","Display","props","disabled","JSON","stringify","data","axios","require","Form","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMethod","method","console","log","setState","url","go","e","preventDefault","target","value","state","get","then","response","catch","error","post","textbox","finally","delete","concat","auth","username","password","role","handleChange","text","handleChangeAuth","onSubmit","src_Methods","src_TextBox","src_Display","React","Component","App","src_Header","src_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.952efc09.chunk.js","sourcesContent":["\nimport React from 'react';\nconst Header =()=> {\n  return (\n    <p className='header'>RESTy</p>\n  )\n}\nexport default Header;","import React from 'react';\nconst Methods = (prop) => {\n  return (\n    <ul className='methods'>\n      <li onClick={() => prop.onMethod('GET')} id='get' >Get</li>\n      <li onClick={() => prop.onMethod('POST')} id='post'>POST</li>\n      <li onClick={() => prop.onMethod('PUT')} id='put' id='put'>PUT</li>\n      <li onClick={() => prop.onMethod('DELETE')} id='delete' >DELETE</li>\n      <li><button type='submit'>go</button></li>\n    </ul>\n\n  )\n\n}\nexport default Methods;","import React from 'react';\nconst TextBox =(prop) => {\n  return (\n    <>\n    <textarea className='text-box' name='textarea' onChange={prop.handler} placehoder=\"\n      id: 1,\n     title: 'foo',\n     body: 'bar',\n     userId: 1'\"\n    />\n    <div className='button-box'>\n    <button className='left' onClick={prop.handleauth}>Headers</button>\n    {prop.basicauth}\n    <br />\n\n    <input type='text' placeholder='username' name='username' placeholder='floyd' onChange={prop.authhandle}/>\n\n    <input type='text' placeholder='4321' onChange={prop.authhandle} name='password'/>\n\n    <br />\n    {prop.bearertoken}\n    <input type='text' className='left'/>\n    </div>\n    </>\n  )\n\n}\n\nexport default TextBox;","import React from 'react';\n\nconst Display = (props) => {\n  return (\n    <div disabled type='text' className='width' name='textarea' placeholder='text'>{JSON.stringify(props.data)}</div>\n  )\n}\n\nexport default Display;","\nimport React from 'react';\nimport Methods from './Methods';\nimport TextBox from './TextBox';\nimport Display from './Display';\nconst axios = require('axios');\n\n\nclass Form extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      method: 'GET',\n      url: '',\n      data: {},\n      textbox: '',\n      username: '',\n      password: ''\n    }\n\n  }\n\n  handleMethod = (method) => {\n    console.log(method)\n    this.setState({\n      method: method,\n      url: '',\n\n    })\n  }\n\n  go = (e) => {\n    e.preventDefault();\n    let url = e.target.url.value;\n    if (this.state.method === 'GET') {\n      axios.get(url)\n        .then((response) => {\n          // handle success\n          this.setState({\n            data: response\n          })\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n\n\n    } else if (this.state.method === 'POST') {\n      axios.post(url, this.state.textbox)\n        .then((response) => {\n          // handle success\n          this.setState({\n            data: response\n          })\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n\n    }else if (this.state.method === 'DELETE') {\n      axios.delete(`${url}/${this.state.textbox}`, this.state.textbox)\n        .then((response) => {\n          // handle success\n          this.setState({\n            data: response\n          })\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n\n    }else if (this.state.method === 'PUT') {\n      axios.post(url, this.state.textbox)\n              .then((response) => {\n          // handle success\n          this.setState({\n            data: response\n          })\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n\n    }\n  }\nauth = () => {\n  axios.post('https://videogame-marketplace.herokuapp.com/api/#/Authentication/post_signin', {\n    \"username\": this.state.username,\n    \"password\": this.state.password,\n    \"role\": \"admin\"\n  })\n        .then((response) => {\n          // handle success\n          this.setState({\n            data: response\n          })\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n\n}\n  handleChange = (text) => {\n    this.setState({ textbox: text.target.value })\n    const name = {\n      title: 'foo',\n      body: 'bar',\n      userId: 1\n    }\n}\n\nhandleChangeAuth =(text)=> {\n this.setState({\n   [text.target.name] :text.target.value\n })\n\n}\n  render() {\n    return (\n      <form onSubmit={this.go} className='main'>\n        <div className='sectionLeft'>\n          <p className='text'>History</p>\n        </div>\n        <div className='sectionRight'>\n          <input type='text' className='input-right' placeholder='(get) https://swapi.co/api/people ,(post send object(\"id: 1,\n      title: foo,\n      body: bar,\n      userId: 1),delete type 1) https://jsonplaceholder.typicode.com/posts' name='url' />\n          <Methods onMethod={this.handleMethod} />\n\n          <TextBox basicauth='Basic Authorization' bearertoken='Bearer Token' name='textbox' value={this.state.textbox} handler={this.handleChange} authhandle={this.handleChangeAuth} handleauth={this.auth}/>\n\n          <br />\n          <Display basicauth='Basic Authorization' data={this.state.data} />\n        </div>\n      </form>\n    )\n  }\n}\nexport default Form;","import React from 'react';\nimport './App.scss';\nimport Header from './Header';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Form />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}